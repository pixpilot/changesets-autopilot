import fs from 'fs';
import path from 'path';

import * as core from '@actions/core';

import { changesetDir } from './changesets';

/**
 * Cleans up auto-generated changeset files in prerelease mode.
 * In normal mode, changeset version removes these files automatically,
 * but in prerelease mode they persist to allow multiple prereleases.
 * We clean them up after publishing to avoid accumulation.
 */
export function cleanupAutoGeneratedChangesetFiles(): void {
  if (!fs.existsSync(changesetDir)) {
    return;
  }

  const files = fs.readdirSync(changesetDir);
  const autoGeneratedFiles = files.filter(
    (file) => file.startsWith('auto-generated-at-') && file.endsWith('.md'),
  );

  if (autoGeneratedFiles.length === 0) {
    core.info('No auto-generated changeset files to clean up');
    return;
  }

  core.info(`Cleaning up ${autoGeneratedFiles.length} auto-generated changeset files`);

  for (const file of autoGeneratedFiles) {
    const filePath = path.join(changesetDir, file);
    try {
      fs.unlinkSync(filePath);
      core.info(`Removed: ${file}`);
    } catch (error) {
      core.warning(`Failed to remove ${file}: ${String(error)}`);
    }
  }
}
